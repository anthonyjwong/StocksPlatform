{

provider: 'google',

sub: '117110907101858274669',

id: '117110907101858274669',

displayName: 'Ronald Chhua',

name: { givenName: 'Ronald', familyName: 'Chhua' },

given_name: 'Ronald',

family_name: 'Chhua',

email_verified: true,

verified: true,

language: 'en',

locale: undefined,

email: 'ronchhua321@gmail.com',

emails: [ { value: 'ronchhua321@gmail.com', type: 'account' } ],

photos: [

{

value: 'https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg',

type: 'default'

}

],

picture: 'https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg',

_raw: '{\n' +

' "sub": "117110907101858274669",\n' +

' "name": "Ronald Chhua",\n' +

' "given_name": "Ronald",\n' +

' "family_name": "Chhua",\n' +

' "picture": "https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg",\n' +

' "email": "ronchhua321@gmail.com",\n' +

' "email_verified": true,\n' +

' "locale": "en"\n' +

'}',

_json: {

sub: '117110907101858274669',

name: 'Ronald Chhua',

given_name: 'Ronald',

family_name: 'Chhua',

picture: 'https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg',

email: 'ronchhua321@gmail.com',

email_verified: true,

locale: 'en'

}

}

<ref *2> IncomingMessage {

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: null, tail: null, length: 0 },

length: 0,

pipes: [],

flowing: null,

ended: true,

endEmitted: false,

reading: false,

sync: true,

needReadable: false,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: true,

autoDestroy: false,

destroyed: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: true,

decoder: null,

encoding: null,

[Symbol(kPaused)]: null

},

readable: true,

_events: [Object: null prototype] {

end: [Function: resetHeadersTimeoutOnReqEnd]

},

_eventsCount: 1,

_maxListeners: undefined,

socket: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: null, tail: null, length: 0 },

length: 0,

pipes: [],

flowing: true,

ended: false,

endEmitted: false,

reading: true,

sync: false,

needReadable: true,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: false,

autoDestroy: false,

destroyed: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: false,

decoder: null,

encoding: null,

[Symbol(kPaused)]: false

},

readable: true,

_events: [Object: null prototype] {

end: [Array],

timeout: [Function: socketOnTimeout],

data: [Function: bound socketOnData],

error: [Function: socketOnError],

close: [Array],

drain: [Function: bound socketOnDrain],

resume: [Function: onSocketResume],

pause: [Function: onSocketPause]

},

_eventsCount: 8,

_maxListeners: undefined,

_writableState: WritableState {

objectMode: false,

highWaterMark: 16384,

finalCalled: false,

needDrain: false,

ending: false,

ended: false,

finished: false,

destroyed: false,

decodeStrings: false,

defaultEncoding: 'utf8',

length: 0,

writing: false,

corked: 0,

sync: false,

bufferProcessing: false,

onwrite: [Function: bound onwrite],

writecb: null,

writelen: 0,

afterWriteTickInfo: [Object],

bufferedRequest: null,

lastBufferedRequest: null,

pendingcb: 4,

prefinished: false,

errorEmitted: false,

emitClose: false,

autoDestroy: false,

errored: false,

bufferedRequestCount: 0,

corkedRequestsFree: [Object]

},

writable: true,

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

headersTimeout: 60000,

_connectionKey: '6::::5001',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(asyncId)]: 6

},

_server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

headersTimeout: 60000,

_connectionKey: '6::::5001',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(asyncId)]: 6

},

parser: HTTPParser {

'0': [Function: parserOnHeaders],

'1': [Function: parserOnHeadersComplete],

'2': [Function: parserOnBody],

'3': [Function: parserOnMessageComplete],

'4': [Function: bound onParserExecute],

_headers: [],

_url: '',

socket: [Circular *1],

incoming: [Circular *2],

outgoing: null,

maxHeaderPairs: 2000,

_consumed: true,

onIncoming: [Function: bound parserOnIncoming],

parsingHeadersStart: 0

},

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

_paused: false,

_httpMessage: ServerResponse {

_events: [Object: null prototype],

_eventsCount: 1,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: 20,

_hasBody: true,

_trailer: '',

finished: true,

_headerSent: true,

socket: [Circular *1],

_header: 'HTTP/1.1 200 OK\r\n' +

'X-Powered-By: Express\r\n' +

'Access-Control-Allow-Origin: *\r\n' +

'Content-Type: application/json; charset=utf-8\r\n' +

'Content-Length: 20\r\n' +

'ETag: W/"14-rq9iupSkipoci1FrGvX7wxkNFCw"\r\n' +

'Date: Sun, 25 Apr 2021 10:56:59 GMT\r\n' +

'Connection: keep-alive\r\n' +

'\r\n',

_onPendingData: [Function: bound updateOutgoingData],

_sent100: false,

_expect_continue: false,

req: [Circular *2],

locals: [Object: null prototype] {},

statusMessage: 'OK',

statusCode: 200,

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype]

},

timeout: 0,

[Symbol(asyncId)]: 8,

[Symbol(kHandle)]: TCP {

reading: true,

onconnection: null,

_consumed: true,

[Symbol(owner)]: [Circular *1]

},

[Symbol(kSetNoDelay)]: false,

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: Timeout {

_idleTimeout: -1,

_idlePrev: null,

_idleNext: null,

_idleStart: 72206,

_onTimeout: null,

_timerArgs: undefined,

_repeat: null,

_destroyed: true,

[Symbol(refed)]: false,

[Symbol(asyncId)]: 19,

[Symbol(triggerId)]: 15

},

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0

},

httpVersionMajor: 1,

httpVersionMinor: 1,

httpVersion: '1.1',

complete: true,

headers: {

host: 'localhost:5001',

connection: 'keep-alive',

'upgrade-insecure-requests': '1',

'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36',

accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',

'sec-fetch-site': 'cross-site',

'sec-fetch-mode': 'navigate',

'sec-fetch-user': '?1',

'sec-fetch-dest': 'document',

'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90"',

'sec-ch-ua-mobile': '?0',

'accept-encoding': 'gzip, deflate, br',

'accept-language': 'en-US,en;q=0.9',

cookie: '_xsrf=2|dd7a5ab5|cf09af6afeb0ff296fc1f59dff65b21c|1617142081; username-localhost-8888="2|1:0|10:1618988095|23:username-localhost-8888|44:YTNhNzNjMDBmN2RmNDdjNjgxZDVlN2M4M2Q2YjRlY2Q=|0eaee15374cf956a192d1f0bcdb173547de1eed2366f16d68240604969a6b66d"'

},

rawHeaders: [

'Host',

'localhost:5001',

'Connection',

'keep-alive',

'Upgrade-Insecure-Requests',

'1',

'User-Agent',

'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.85 Safari/537.36',

'Accept',

'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',

'Sec-Fetch-Site',

'cross-site',

'Sec-Fetch-Mode',

'navigate',

'Sec-Fetch-User',

'?1',

'Sec-Fetch-Dest',

'document',

'sec-ch-ua',

'" Not A;Brand";v="99", "Chromium";v="90", "Google Chrome";v="90"',

'sec-ch-ua-mobile',

'?0',

'Accept-Encoding',

'gzip, deflate, br',

'Accept-Language',

'en-US,en;q=0.9',

'Cookie',

'_xsrf=2|dd7a5ab5|cf09af6afeb0ff296fc1f59dff65b21c|1617142081; username-localhost-8888="2|1:0|10:1618988095|23:username-localhost-8888|44:YTNhNzNjMDBmN2RmNDdjNjgxZDVlN2M4M2Q2YjRlY2Q=|0eaee15374cf956a192d1f0bcdb173547de1eed2366f16d68240604969a6b66d"'

],

trailers: {},

rawTrailers: [],

aborted: false,

upgrade: false,

url: '/login/success?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

method: 'GET',

statusCode: null,

statusMessage: null,

client: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: ReadableState {

objectMode: false,

highWaterMark: 16384,

buffer: BufferList { head: null, tail: null, length: 0 },

length: 0,

pipes: [],

flowing: true,

ended: false,

endEmitted: false,

reading: true,

sync: false,

needReadable: true,

emittedReadable: false,

readableListening: false,

resumeScheduled: false,

errorEmitted: false,

emitClose: false,

autoDestroy: false,

destroyed: false,

defaultEncoding: 'utf8',

awaitDrainWriters: null,

multiAwaitDrain: false,

readingMore: false,

decoder: null,

encoding: null,

[Symbol(kPaused)]: false

},

readable: true,

_events: [Object: null prototype] {

end: [Array],

timeout: [Function: socketOnTimeout],

data: [Function: bound socketOnData],

error: [Function: socketOnError],

close: [Array],

drain: [Function: bound socketOnDrain],

resume: [Function: onSocketResume],

pause: [Function: onSocketPause]

},

_eventsCount: 8,

_maxListeners: undefined,

_writableState: WritableState {

objectMode: false,

highWaterMark: 16384,

finalCalled: false,

needDrain: false,

ending: false,

ended: false,

finished: false,

destroyed: false,

decodeStrings: false,

defaultEncoding: 'utf8',

length: 0,

writing: false,

corked: 0,

sync: false,

bufferProcessing: false,

onwrite: [Function: bound onwrite],

writecb: null,

writelen: 0,

afterWriteTickInfo: [Object],

bufferedRequest: null,

lastBufferedRequest: null,

pendingcb: 4,

prefinished: false,

errorEmitted: false,

emitClose: false,

autoDestroy: false,

errored: false,

bufferedRequestCount: 0,

corkedRequestsFree: [Object]

},

writable: true,

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

headersTimeout: 60000,

_connectionKey: '6::::5001',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(asyncId)]: 6

},

_server: Server {

maxHeaderSize: undefined,

insecureHTTPParser: undefined,

_events: [Object: null prototype],

_eventsCount: 2,

_maxListeners: undefined,

_connections: 2,

_handle: [TCP],

_usingWorkers: false,

_workers: [],

_unref: false,

allowHalfOpen: true,

pauseOnConnect: false,

httpAllowHalfOpen: false,

timeout: 0,

keepAliveTimeout: 5000,

maxHeadersCount: null,

headersTimeout: 60000,

_connectionKey: '6::::5001',

[Symbol(IncomingMessage)]: [Function: IncomingMessage],

[Symbol(ServerResponse)]: [Function: ServerResponse],

[Symbol(kCapture)]: false,

[Symbol(asyncId)]: 6

},

parser: HTTPParser {

'0': [Function: parserOnHeaders],

'1': [Function: parserOnHeadersComplete],

'2': [Function: parserOnBody],

'3': [Function: parserOnMessageComplete],

'4': [Function: bound onParserExecute],

_headers: [],

_url: '',

socket: [Circular *1],

incoming: [Circular *2],

outgoing: null,

maxHeaderPairs: 2000,

_consumed: true,

onIncoming: [Function: bound parserOnIncoming],

parsingHeadersStart: 0

},

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

_paused: false,

_httpMessage: ServerResponse {

_events: [Object: null prototype],

_eventsCount: 1,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: 20,

_hasBody: true,

_trailer: '',

finished: true,

_headerSent: true,

socket: [Circular *1],

_header: 'HTTP/1.1 200 OK\r\n' +

'X-Powered-By: Express\r\n' +

'Access-Control-Allow-Origin: *\r\n' +

'Content-Type: application/json; charset=utf-8\r\n' +

'Content-Length: 20\r\n' +

'ETag: W/"14-rq9iupSkipoci1FrGvX7wxkNFCw"\r\n' +

'Date: Sun, 25 Apr 2021 10:56:59 GMT\r\n' +

'Connection: keep-alive\r\n' +

'\r\n',

_onPendingData: [Function: bound updateOutgoingData],

_sent100: false,

_expect_continue: false,

req: [Circular *2],

locals: [Object: null prototype] {},

statusMessage: 'OK',

statusCode: 200,

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype]

},

timeout: 0,

[Symbol(asyncId)]: 8,

[Symbol(kHandle)]: TCP {

reading: true,

onconnection: null,

_consumed: true,

[Symbol(owner)]: [Circular *1]

},

[Symbol(kSetNoDelay)]: false,

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: Timeout {

_idleTimeout: -1,

_idlePrev: null,

_idleNext: null,

_idleStart: 72206,

_onTimeout: null,

_timerArgs: undefined,

_repeat: null,

_destroyed: true,

[Symbol(refed)]: false,

[Symbol(asyncId)]: 19,

[Symbol(triggerId)]: 15

},

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0

},

_consuming: false,

_dumped: false,

next: [Function: next],

baseUrl: '/oauth',

originalUrl: '/oauth/login/success?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

_parsedUrl: Url {

protocol: null,

slashes: null,

auth: null,

host: null,

port: null,

hostname: null,

hash: null,

search: '?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

query: 'code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

pathname: '/login/success',

path: '/login/success?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

href: '/login/success?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent',

_raw: '/login/success?code=4%2F0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw&scope=email+profile+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.profile+openid&authuser=0&prompt=consent'

},

params: {},

query: {

code: '4/0AY0e-g6IlqpAqP6Z82xF9VAnIEviOqs8fHqBaTJ6DWKIO2DfT-pxFC2hbgeSDgAV_ojMfw',

scope: 'email profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/userinfo.profile openid',

authuser: '0',

prompt: 'consent'

},

res: <ref *3> ServerResponse {

_events: [Object: null prototype] { finish: [Function: bound resOnFinish] },

_eventsCount: 1,

_maxListeners: undefined,

outputData: [],

outputSize: 0,

writable: true,

_last: false,

chunkedEncoding: false,

shouldKeepAlive: true,

useChunkedEncodingByDefault: true,

sendDate: true,

_removedConnection: false,

_removedContLen: false,

_removedTE: false,

_contentLength: 20,

_hasBody: true,

_trailer: '',

finished: true,

_headerSent: true,

socket: <ref *1> Socket {

connecting: false,

_hadError: false,

_parent: null,

_host: null,

_readableState: [ReadableState],

readable: true,

_events: [Object: null prototype],

_eventsCount: 8,

_maxListeners: undefined,

_writableState: [WritableState],

writable: true,

allowHalfOpen: true,

_sockname: null,

_pendingData: null,

_pendingEncoding: '',

server: [Server],

_server: [Server],

parser: [HTTPParser],

on: [Function: socketListenerWrap],

addListener: [Function: socketListenerWrap],

prependListener: [Function: socketListenerWrap],

_paused: false,

_httpMessage: [Circular *3],

timeout: 0,

[Symbol(asyncId)]: 8,

[Symbol(kHandle)]: [TCP],

[Symbol(kSetNoDelay)]: false,

[Symbol(lastWriteQueueSize)]: 0,

[Symbol(timeout)]: Timeout {

_idleTimeout: -1,

_idlePrev: null,

_idleNext: null,

_idleStart: 72206,

_onTimeout: null,

_timerArgs: undefined,

_repeat: null,

_destroyed: true,

[Symbol(refed)]: false,

[Symbol(asyncId)]: 19,

[Symbol(triggerId)]: 15

},

[Symbol(kBuffer)]: null,

[Symbol(kBufferCb)]: null,

[Symbol(kBufferGen)]: null,

[Symbol(kCapture)]: false,

[Symbol(kBytesRead)]: 0,

[Symbol(kBytesWritten)]: 0

},

_header: 'HTTP/1.1 200 OK\r\n' +

'X-Powered-By: Express\r\n' +

'Access-Control-Allow-Origin: *\r\n' +

'Content-Type: application/json; charset=utf-8\r\n' +

'Content-Length: 20\r\n' +

'ETag: W/"14-rq9iupSkipoci1FrGvX7wxkNFCw"\r\n' +

'Date: Sun, 25 Apr 2021 10:56:59 GMT\r\n' +

'Connection: keep-alive\r\n' +

'\r\n',

_onPendingData: [Function: bound updateOutgoingData],

_sent100: false,

_expect_continue: false,

req: [Circular *2],

locals: [Object: null prototype] {},

statusMessage: 'OK',

statusCode: 200,

[Symbol(kCapture)]: false,

[Symbol(kNeedDrain)]: false,

[Symbol(corked)]: 0,

[Symbol(kOutHeaders)]: [Object: null prototype] {

'x-powered-by': [Array],

'access-control-allow-origin': [Array],

'content-type': [Array],

'content-length': [Array],

etag: [Array]

}

},

_passport: {

instance: Authenticator {

_key: 'passport',

_strategies: [Object],

_serializers: [Array],

_deserializers: [Array],

_infoTransformers: [],

_framework: [Object],

_userProperty: 'user',

_sm: [SessionManager],

Authenticator: [Function: Authenticator],

Passport: [Function: Authenticator],

Strategy: [Function],

strategies: [Object]

},

session: { user: [Object] }

},

body: {},

route: Route {

path: '/login/success',

stack: [ [Layer], [Layer] ],

methods: { get: true }

},

user: {

provider: 'google',

sub: '117110907101858274669',

id: '117110907101858274669',

displayName: 'Ronald Chhua',

name: { givenName: 'Ronald', familyName: 'Chhua' },

given_name: 'Ronald',

family_name: 'Chhua',

email_verified: true,

verified: true,

language: 'en',

locale: undefined,

email: 'ronchhua321@gmail.com',

emails: [ [Object] ],

photos: [ [Object] ],

picture: 'https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg',

_raw: '{\n' +

' "sub": "117110907101858274669",\n' +

' "name": "Ronald Chhua",\n' +

' "given_name": "Ronald",\n' +

' "family_name": "Chhua",\n' +

' "picture": "https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg",\n' +

' "email": "ronchhua321@gmail.com",\n' +

' "email_verified": true,\n' +

' "locale": "en"\n' +

'}',

_json: {

sub: '117110907101858274669',

name: 'Ronald Chhua',

given_name: 'Ronald',

family_name: 'Chhua',

picture: 'https://lh4.googleusercontent.com/-z82eTxQsf0A/AAAAAAAAAAI/AAAAAAAAAAA/AMZuucnPFnFmDTPPu0hm8vaWvPr0BK3WgA/s96-c/photo.jpg',

email: 'ronchhua321@gmail.com',

email_verified: true,

locale: 'en'

}

},

session: { passport: { user: [Object] } },

authInfo: {},

[Symbol(kCapture)]: false

}